//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UniSyncClient.UniSyncService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MarshalByRefObject", Namespace="http://schemas.datacontract.org/2004/07/System")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UniSyncClient.UniSyncService.Stream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UniSyncClient.UniSyncService.FileStream))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract>))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UniSyncClient.UniSyncService.FileInfoDataContract))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UniSyncClient.UniSyncService.FileAction))]
    public partial class MarshalByRefObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object @__identityField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object @__identity {
            get {
                return this.@__identityField;
            }
            set {
                if ((object.ReferenceEquals(this.@__identityField, value) != true)) {
                    this.@__identityField = value;
                    this.RaisePropertyChanged("__identity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Stream", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(UniSyncClient.UniSyncService.FileStream))]
    public partial class Stream : UniSyncClient.UniSyncService.MarshalByRefObject {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileStream", Namespace="http://schemas.datacontract.org/2004/07/System.IO")]
    public partial class FileStream : UniSyncClient.UniSyncService.Stream {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfoDataContract", Namespace="http://schemas.datacontract.org/2004/07/UniSyncService.DataContract")]
    public partial class FileInfoDataContract : object, System.ComponentModel.INotifyPropertyChanged {
        
        private UniSyncClient.UniSyncService.FileAction ActionField;
        
        private System.DateTime ModifyDateTimeField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public UniSyncClient.UniSyncService.FileAction Action {
            get {
                return this.ActionField;
            }
            set {
                if ((this.ActionField.Equals(value) != true)) {
                    this.ActionField = value;
                    this.RaisePropertyChanged("Action");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ModifyDateTime {
            get {
                return this.ModifyDateTimeField;
            }
            set {
                if ((this.ModifyDateTimeField.Equals(value) != true)) {
                    this.ModifyDateTimeField = value;
                    this.RaisePropertyChanged("ModifyDateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileAction", Namespace="http://schemas.datacontract.org/2004/07/UniSyncService.DataContract")]
    public enum FileAction : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToClient = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SendToServer = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UniSyncService.IUniSyncService")]
    public interface IUniSyncService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUniSyncService/Initialize", ReplyAction="http://tempuri.org/IUniSyncService/InitializeResponse")]
        System.IAsyncResult BeginInitialize(System.AsyncCallback callback, object asyncState);
        
        void EndInitialize(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUniSyncService/ReceiveFileStreamFromServer", ReplyAction="http://tempuri.org/IUniSyncService/ReceiveFileStreamFromServerResponse")]
        System.IAsyncResult BeginReceiveFileStreamFromServer(string name, System.AsyncCallback callback, object asyncState);
        
        UniSyncClient.UniSyncService.FileStream EndReceiveFileStreamFromServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUniSyncService/SendFileStreamToServer", ReplyAction="http://tempuri.org/IUniSyncService/SendFileStreamToServerResponse")]
        System.IAsyncResult BeginSendFileStreamToServer(UniSyncClient.UniSyncService.FileStream file, string name, System.AsyncCallback callback, object asyncState);
        
        void EndSendFileStreamToServer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUniSyncService/FileListToSend", ReplyAction="http://tempuri.org/IUniSyncService/FileListToSendResponse")]
        System.IAsyncResult BeginFileListToSend(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> EndFileListToSend(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUniSyncServiceChannel : UniSyncClient.UniSyncService.IUniSyncService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ReceiveFileStreamFromServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ReceiveFileStreamFromServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public UniSyncClient.UniSyncService.FileStream Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((UniSyncClient.UniSyncService.FileStream)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileListToSendCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public FileListToSendCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UniSyncServiceClient : System.ServiceModel.ClientBase<UniSyncClient.UniSyncService.IUniSyncService>, UniSyncClient.UniSyncService.IUniSyncService {
        
        private BeginOperationDelegate onBeginInitializeDelegate;
        
        private EndOperationDelegate onEndInitializeDelegate;
        
        private System.Threading.SendOrPostCallback onInitializeCompletedDelegate;
        
        private BeginOperationDelegate onBeginReceiveFileStreamFromServerDelegate;
        
        private EndOperationDelegate onEndReceiveFileStreamFromServerDelegate;
        
        private System.Threading.SendOrPostCallback onReceiveFileStreamFromServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendFileStreamToServerDelegate;
        
        private EndOperationDelegate onEndSendFileStreamToServerDelegate;
        
        private System.Threading.SendOrPostCallback onSendFileStreamToServerCompletedDelegate;
        
        private BeginOperationDelegate onBeginFileListToSendDelegate;
        
        private EndOperationDelegate onEndFileListToSendDelegate;
        
        private System.Threading.SendOrPostCallback onFileListToSendCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public UniSyncServiceClient() : 
                base(UniSyncServiceClient.GetDefaultBinding(), UniSyncServiceClient.GetDefaultEndpointAddress()) {
        }
        
        public UniSyncServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(UniSyncServiceClient.GetBindingForEndpoint(endpointConfiguration), UniSyncServiceClient.GetEndpointAddress(endpointConfiguration)) {
        }
        
        public UniSyncServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(UniSyncServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
        }
        
        public UniSyncServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(UniSyncServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
        }
        
        public UniSyncServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InitializeCompleted;
        
        public event System.EventHandler<ReceiveFileStreamFromServerCompletedEventArgs> ReceiveFileStreamFromServerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SendFileStreamToServerCompleted;
        
        public event System.EventHandler<FileListToSendCompletedEventArgs> FileListToSendCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UniSyncClient.UniSyncService.IUniSyncService.BeginInitialize(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitialize(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void UniSyncClient.UniSyncService.IUniSyncService.EndInitialize(System.IAsyncResult result) {
            base.Channel.EndInitialize(result);
        }
        
        private System.IAsyncResult OnBeginInitialize(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((UniSyncClient.UniSyncService.IUniSyncService)(this)).BeginInitialize(callback, asyncState);
        }
        
        private object[] OnEndInitialize(System.IAsyncResult result) {
            ((UniSyncClient.UniSyncService.IUniSyncService)(this)).EndInitialize(result);
            return null;
        }
        
        private void OnInitializeCompleted(object state) {
            if ((this.InitializeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitializeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitializeAsync() {
            this.InitializeAsync(null);
        }
        
        public void InitializeAsync(object userState) {
            if ((this.onBeginInitializeDelegate == null)) {
                this.onBeginInitializeDelegate = new BeginOperationDelegate(this.OnBeginInitialize);
            }
            if ((this.onEndInitializeDelegate == null)) {
                this.onEndInitializeDelegate = new EndOperationDelegate(this.OnEndInitialize);
            }
            if ((this.onInitializeCompletedDelegate == null)) {
                this.onInitializeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitializeCompleted);
            }
            base.InvokeAsync(this.onBeginInitializeDelegate, null, this.onEndInitializeDelegate, this.onInitializeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UniSyncClient.UniSyncService.IUniSyncService.BeginReceiveFileStreamFromServer(string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginReceiveFileStreamFromServer(name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        UniSyncClient.UniSyncService.FileStream UniSyncClient.UniSyncService.IUniSyncService.EndReceiveFileStreamFromServer(System.IAsyncResult result) {
            return base.Channel.EndReceiveFileStreamFromServer(result);
        }
        
        private System.IAsyncResult OnBeginReceiveFileStreamFromServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            return ((UniSyncClient.UniSyncService.IUniSyncService)(this)).BeginReceiveFileStreamFromServer(name, callback, asyncState);
        }
        
        private object[] OnEndReceiveFileStreamFromServer(System.IAsyncResult result) {
            UniSyncClient.UniSyncService.FileStream retVal = ((UniSyncClient.UniSyncService.IUniSyncService)(this)).EndReceiveFileStreamFromServer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnReceiveFileStreamFromServerCompleted(object state) {
            if ((this.ReceiveFileStreamFromServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ReceiveFileStreamFromServerCompleted(this, new ReceiveFileStreamFromServerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ReceiveFileStreamFromServerAsync(string name) {
            this.ReceiveFileStreamFromServerAsync(name, null);
        }
        
        public void ReceiveFileStreamFromServerAsync(string name, object userState) {
            if ((this.onBeginReceiveFileStreamFromServerDelegate == null)) {
                this.onBeginReceiveFileStreamFromServerDelegate = new BeginOperationDelegate(this.OnBeginReceiveFileStreamFromServer);
            }
            if ((this.onEndReceiveFileStreamFromServerDelegate == null)) {
                this.onEndReceiveFileStreamFromServerDelegate = new EndOperationDelegate(this.OnEndReceiveFileStreamFromServer);
            }
            if ((this.onReceiveFileStreamFromServerCompletedDelegate == null)) {
                this.onReceiveFileStreamFromServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnReceiveFileStreamFromServerCompleted);
            }
            base.InvokeAsync(this.onBeginReceiveFileStreamFromServerDelegate, new object[] {
                        name}, this.onEndReceiveFileStreamFromServerDelegate, this.onReceiveFileStreamFromServerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UniSyncClient.UniSyncService.IUniSyncService.BeginSendFileStreamToServer(UniSyncClient.UniSyncService.FileStream file, string name, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendFileStreamToServer(file, name, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void UniSyncClient.UniSyncService.IUniSyncService.EndSendFileStreamToServer(System.IAsyncResult result) {
            base.Channel.EndSendFileStreamToServer(result);
        }
        
        private System.IAsyncResult OnBeginSendFileStreamToServer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            UniSyncClient.UniSyncService.FileStream file = ((UniSyncClient.UniSyncService.FileStream)(inValues[0]));
            string name = ((string)(inValues[1]));
            return ((UniSyncClient.UniSyncService.IUniSyncService)(this)).BeginSendFileStreamToServer(file, name, callback, asyncState);
        }
        
        private object[] OnEndSendFileStreamToServer(System.IAsyncResult result) {
            ((UniSyncClient.UniSyncService.IUniSyncService)(this)).EndSendFileStreamToServer(result);
            return null;
        }
        
        private void OnSendFileStreamToServerCompleted(object state) {
            if ((this.SendFileStreamToServerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendFileStreamToServerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendFileStreamToServerAsync(UniSyncClient.UniSyncService.FileStream file, string name) {
            this.SendFileStreamToServerAsync(file, name, null);
        }
        
        public void SendFileStreamToServerAsync(UniSyncClient.UniSyncService.FileStream file, string name, object userState) {
            if ((this.onBeginSendFileStreamToServerDelegate == null)) {
                this.onBeginSendFileStreamToServerDelegate = new BeginOperationDelegate(this.OnBeginSendFileStreamToServer);
            }
            if ((this.onEndSendFileStreamToServerDelegate == null)) {
                this.onEndSendFileStreamToServerDelegate = new EndOperationDelegate(this.OnEndSendFileStreamToServer);
            }
            if ((this.onSendFileStreamToServerCompletedDelegate == null)) {
                this.onSendFileStreamToServerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendFileStreamToServerCompleted);
            }
            base.InvokeAsync(this.onBeginSendFileStreamToServerDelegate, new object[] {
                        file,
                        name}, this.onEndSendFileStreamToServerDelegate, this.onSendFileStreamToServerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult UniSyncClient.UniSyncService.IUniSyncService.BeginFileListToSend(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginFileListToSend(fileList, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> UniSyncClient.UniSyncService.IUniSyncService.EndFileListToSend(System.IAsyncResult result) {
            return base.Channel.EndFileListToSend(result);
        }
        
        private System.IAsyncResult OnBeginFileListToSend(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList = ((System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract>)(inValues[0]));
            return ((UniSyncClient.UniSyncService.IUniSyncService)(this)).BeginFileListToSend(fileList, callback, asyncState);
        }
        
        private object[] OnEndFileListToSend(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> retVal = ((UniSyncClient.UniSyncService.IUniSyncService)(this)).EndFileListToSend(result);
            return new object[] {
                    retVal};
        }
        
        private void OnFileListToSendCompleted(object state) {
            if ((this.FileListToSendCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.FileListToSendCompleted(this, new FileListToSendCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void FileListToSendAsync(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList) {
            this.FileListToSendAsync(fileList, null);
        }
        
        public void FileListToSendAsync(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList, object userState) {
            if ((this.onBeginFileListToSendDelegate == null)) {
                this.onBeginFileListToSendDelegate = new BeginOperationDelegate(this.OnBeginFileListToSend);
            }
            if ((this.onEndFileListToSendDelegate == null)) {
                this.onEndFileListToSendDelegate = new EndOperationDelegate(this.OnEndFileListToSend);
            }
            if ((this.onFileListToSendCompletedDelegate == null)) {
                this.onFileListToSendCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnFileListToSendCompleted);
            }
            base.InvokeAsync(this.onBeginFileListToSendDelegate, new object[] {
                        fileList}, this.onEndFileListToSendDelegate, this.onFileListToSendCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override UniSyncClient.UniSyncService.IUniSyncService CreateChannel() {
            return new UniSyncServiceClientChannel(this);
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUniSyncService)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IUniSyncService)) {
                return new System.ServiceModel.EndpointAddress("http://localhost/unisync");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return UniSyncServiceClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IUniSyncService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return UniSyncServiceClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IUniSyncService);
        }
        
        private class UniSyncServiceClientChannel : ChannelBase<UniSyncClient.UniSyncService.IUniSyncService>, UniSyncClient.UniSyncService.IUniSyncService {
            
            public UniSyncServiceClientChannel(System.ServiceModel.ClientBase<UniSyncClient.UniSyncService.IUniSyncService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginInitialize(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Initialize", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInitialize(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Initialize", _args, result);
            }
            
            public System.IAsyncResult BeginReceiveFileStreamFromServer(string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = name;
                System.IAsyncResult _result = base.BeginInvoke("ReceiveFileStreamFromServer", _args, callback, asyncState);
                return _result;
            }
            
            public UniSyncClient.UniSyncService.FileStream EndReceiveFileStreamFromServer(System.IAsyncResult result) {
                object[] _args = new object[0];
                UniSyncClient.UniSyncService.FileStream _result = ((UniSyncClient.UniSyncService.FileStream)(base.EndInvoke("ReceiveFileStreamFromServer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSendFileStreamToServer(UniSyncClient.UniSyncService.FileStream file, string name, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = file;
                _args[1] = name;
                System.IAsyncResult _result = base.BeginInvoke("SendFileStreamToServer", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSendFileStreamToServer(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SendFileStreamToServer", _args, result);
            }
            
            public System.IAsyncResult BeginFileListToSend(System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> fileList, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = fileList;
                System.IAsyncResult _result = base.BeginInvoke("FileListToSend", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> EndFileListToSend(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract> _result = ((System.Collections.ObjectModel.ObservableCollection<UniSyncClient.UniSyncService.FileInfoDataContract>)(base.EndInvoke("FileListToSend", _args, result)));
                return _result;
            }
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IUniSyncService,
        }
    }
}
